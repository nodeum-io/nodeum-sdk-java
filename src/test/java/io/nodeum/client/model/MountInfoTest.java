/*
 * Nodeum API
 * # About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nodeum.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for MountInfo
 */
public class MountInfoTest {
    private final MountInfo model = new MountInfo();

    /**
     * Model tests for MountInfo
     */
    @Test
    public void testMountInfo() {
        // TODO: test MountInfo
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'majorMinor'
     */
    @Test
    public void majorMinorTest() {
        // TODO: test majorMinor
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'poolId'
     */
    @Test
    public void poolIdTest() {
        // TODO: test poolId
    }

    /**
     * Test the property 'poolName'
     */
    @Test
    public void poolNameTest() {
        // TODO: test poolName
    }

    /**
     * Test the property 'nasId'
     */
    @Test
    public void nasIdTest() {
        // TODO: test nasId
    }

    /**
     * Test the property 'nasName'
     */
    @Test
    public void nasNameTest() {
        // TODO: test nasName
    }

    /**
     * Test the property 'nasShareId'
     */
    @Test
    public void nasShareIdTest() {
        // TODO: test nasShareId
    }

    /**
     * Test the property 'nasShareName'
     */
    @Test
    public void nasShareNameTest() {
        // TODO: test nasShareName
    }

    /**
     * Test the property 'cloudConnectorId'
     */
    @Test
    public void cloudConnectorIdTest() {
        // TODO: test cloudConnectorId
    }

    /**
     * Test the property 'cloudConnectorName'
     */
    @Test
    public void cloudConnectorNameTest() {
        // TODO: test cloudConnectorName
    }

    /**
     * Test the property 'cloudBucketId'
     */
    @Test
    public void cloudBucketIdTest() {
        // TODO: test cloudBucketId
    }

    /**
     * Test the property 'cloudBucketName'
     */
    @Test
    public void cloudBucketNameTest() {
        // TODO: test cloudBucketName
    }

    /**
     * Test the property 'tapeId'
     */
    @Test
    public void tapeIdTest() {
        // TODO: test tapeId
    }

    /**
     * Test the property 'tapeBarcode'
     */
    @Test
    public void tapeBarcodeTest() {
        // TODO: test tapeBarcode
    }

    /**
     * Test the property 'tapeLibraryId'
     */
    @Test
    public void tapeLibraryIdTest() {
        // TODO: test tapeLibraryId
    }

    /**
     * Test the property 'tapeLibraryName'
     */
    @Test
    public void tapeLibraryNameTest() {
        // TODO: test tapeLibraryName
    }

    /**
     * Test the property 'tapeLibrarySerial'
     */
    @Test
    public void tapeLibrarySerialTest() {
        // TODO: test tapeLibrarySerial
    }

}
