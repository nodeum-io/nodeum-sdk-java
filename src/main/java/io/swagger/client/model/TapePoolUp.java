/*
 * Nodeum API
 * Nodeum API  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.TapePool;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TapePoolUp
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-16T09:57:17.206Z")
public class TapePoolUp extends TapePool {
  @SerializedName("tape_ids")
  private List<Integer> tapeIds = null;

  public TapePoolUp tapeIds(List<Integer> tapeIds) {
    this.tapeIds = tapeIds;
    return this;
  }

  public TapePoolUp addTapeIdsItem(Integer tapeIdsItem) {
    if (this.tapeIds == null) {
      this.tapeIds = new ArrayList<Integer>();
    }
    this.tapeIds.add(tapeIdsItem);
    return this;
  }

   /**
   * Get tapeIds
   * @return tapeIds
  **/
  @ApiModelProperty(example = "[10,11,12]", value = "")
  public List<Integer> getTapeIds() {
    return tapeIds;
  }

  public void setTapeIds(List<Integer> tapeIds) {
    this.tapeIds = tapeIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapePoolUp tapePoolUp = (TapePoolUp) o;
    return Objects.equals(this.tapeIds, tapePoolUp.tapeIds) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tapeIds, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapePoolUp {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    tapeIds: ").append(toIndentedString(tapeIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

