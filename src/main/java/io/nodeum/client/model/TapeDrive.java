/*
 * Nodeum API
 * # About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nodeum.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nodeum.client.model.TapeDriveAllOf;
import io.nodeum.client.model.TapeDriveDevice;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TapeDrive
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-11T14:27:44.769Z[GMT]")
public class TapeDrive {
  public static final String SERIALIZED_NAME_SERIAL = "serial";
  @SerializedName(SERIALIZED_NAME_SERIAL)
  private String serial;

  public static final String SERIALIZED_NAME_SCSI_ADDRESS = "scsi_address";
  @SerializedName(SERIALIZED_NAME_SCSI_ADDRESS)
  private Integer scsiAddress;

  public static final String SERIALIZED_NAME_VENDOR = "vendor";
  @SerializedName(SERIALIZED_NAME_VENDOR)
  private String vendor;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private String product;

  public static final String SERIALIZED_NAME_FIRMWARE = "firmware";
  @SerializedName(SERIALIZED_NAME_FIRMWARE)
  private String firmware;

  public static final String SERIALIZED_NAME_DEVICE = "device";
  @SerializedName(SERIALIZED_NAME_DEVICE)
  private String device;

  public static final String SERIALIZED_NAME_SGDEVICE = "sgdevice";
  @SerializedName(SERIALIZED_NAME_SGDEVICE)
  private String sgdevice;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_TAPE_LIBRARY_ID = "tape_library_id";
  @SerializedName(SERIALIZED_NAME_TAPE_LIBRARY_ID)
  private Integer tapeLibraryId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_LIBSO = "libso";
  @SerializedName(SERIALIZED_NAME_LIBSO)
  private String libso;

  public static final String SERIALIZED_NAME_ACS = "acs";
  @SerializedName(SERIALIZED_NAME_ACS)
  private Integer acs;

  public static final String SERIALIZED_NAME_LSM = "lsm";
  @SerializedName(SERIALIZED_NAME_LSM)
  private Integer lsm;

  public static final String SERIALIZED_NAME_PANEL = "panel";
  @SerializedName(SERIALIZED_NAME_PANEL)
  private Integer panel;

  public static final String SERIALIZED_NAME_TRANSPORT = "transport";
  @SerializedName(SERIALIZED_NAME_TRANSPORT)
  private Integer transport;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    OFFLINE("offline"),
    
    ONLINE("online");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_FULL = "full";
  @SerializedName(SERIALIZED_NAME_FULL)
  private Integer full;

  public static final String SERIALIZED_NAME_MOUNT_COUNT = "mount_count";
  @SerializedName(SERIALIZED_NAME_MOUNT_COUNT)
  private Integer mountCount;

  public static final String SERIALIZED_NAME_USE_TO = "use_to";
  @SerializedName(SERIALIZED_NAME_USE_TO)
  private String useTo;

  public static final String SERIALIZED_NAME_USE_BY = "use_by";
  @SerializedName(SERIALIZED_NAME_USE_BY)
  private String useBy;

  public static final String SERIALIZED_NAME_BARCODE = "barcode";
  @SerializedName(SERIALIZED_NAME_BARCODE)
  private String barcode;

  public static final String SERIALIZED_NAME_TASK_ID = "task_id";
  @SerializedName(SERIALIZED_NAME_TASK_ID)
  private Integer taskId;

  public static final String SERIALIZED_NAME_USE_FILE_PROCESSED_SIZE = "use_file_processed_size";
  @SerializedName(SERIALIZED_NAME_USE_FILE_PROCESSED_SIZE)
  private Integer useFileProcessedSize;

  public static final String SERIALIZED_NAME_USE_FILE_SIZE_TO_PROCESS = "use_file_size_to_process";
  @SerializedName(SERIALIZED_NAME_USE_FILE_SIZE_TO_PROCESS)
  private Integer useFileSizeToProcess;

  public static final String SERIALIZED_NAME_USE_FILE_NAME_PROCESSED = "use_file_name_processed";
  @SerializedName(SERIALIZED_NAME_USE_FILE_NAME_PROCESSED)
  private String useFileNameProcessed;

  public static final String SERIALIZED_NAME_BANDWIDTH = "bandwidth";
  @SerializedName(SERIALIZED_NAME_BANDWIDTH)
  private Integer bandwidth;


   /**
   * Get serial
   * @return serial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "C0F9000A01", value = "")

  public String getSerial() {
    return serial;
  }




   /**
   * Get scsiAddress
   * @return scsiAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "256", value = "")

  public Integer getScsiAddress() {
    return scsiAddress;
  }




   /**
   * Get vendor
   * @return vendor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "IBM", value = "")

  public String getVendor() {
    return vendor;
  }




   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ULT3580-TD5", value = "")

  public String getProduct() {
    return product;
  }




   /**
   * Get firmware
   * @return firmware
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "D711", value = "")

  public String getFirmware() {
    return firmware;
  }




   /**
   * When saved, device may be prefixed by *n* (eg. &#x60;/dev/nst5&#x60;)
   * @return device
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/dev/st5", value = "When saved, device may be prefixed by *n* (eg. `/dev/nst5`)")

  public String getDevice() {
    return device;
  }




   /**
   * Get sgdevice
   * @return sgdevice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "/dev/sg8", value = "")

  public String getSgdevice() {
    return sgdevice;
  }




   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getId() {
    return id;
  }




   /**
   * Get tapeLibraryId
   * @return tapeLibraryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "")

  public Integer getTapeLibraryId() {
    return tapeLibraryId;
  }




  public TapeDrive name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TapeDrive comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public TapeDrive libso(String libso) {
    
    this.libso = libso;
    return this;
  }

   /**
   * Get libso
   * @return libso
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "drive_lto", value = "")

  public String getLibso() {
    return libso;
  }


  public void setLibso(String libso) {
    this.libso = libso;
  }


  public TapeDrive acs(Integer acs) {
    
    this.acs = acs;
    return this;
  }

   /**
   * Get acs
   * @return acs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAcs() {
    return acs;
  }


  public void setAcs(Integer acs) {
    this.acs = acs;
  }


  public TapeDrive lsm(Integer lsm) {
    
    this.lsm = lsm;
    return this;
  }

   /**
   * Get lsm
   * @return lsm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLsm() {
    return lsm;
  }


  public void setLsm(Integer lsm) {
    this.lsm = lsm;
  }


  public TapeDrive panel(Integer panel) {
    
    this.panel = panel;
    return this;
  }

   /**
   * Get panel
   * @return panel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPanel() {
    return panel;
  }


  public void setPanel(Integer panel) {
    this.panel = panel;
  }


  public TapeDrive transport(Integer transport) {
    
    this.transport = transport;
    return this;
  }

   /**
   * Get transport
   * @return transport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTransport() {
    return transport;
  }


  public void setTransport(Integer transport) {
    this.transport = transport;
  }


   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "online", value = "")

  public StatusEnum getStatus() {
    return status;
  }




   /**
   * Get full
   * @return full
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFull() {
    return full;
  }




   /**
   * Get mountCount
   * @return mountCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMountCount() {
    return mountCount;
  }




   /**
   * Get useTo
   * @return useTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Idle", value = "")

  public String getUseTo() {
    return useTo;
  }




   /**
   * Get useBy
   * @return useBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Idle", value = "")

  public String getUseBy() {
    return useBy;
  }




   /**
   * Get barcode
   * @return barcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NOD407L5", value = "")

  public String getBarcode() {
    return barcode;
  }




   /**
   * Get taskId
   * @return taskId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14", value = "")

  public Integer getTaskId() {
    return taskId;
  }




   /**
   * Get useFileProcessedSize
   * @return useFileProcessedSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUseFileProcessedSize() {
    return useFileProcessedSize;
  }




   /**
   * Get useFileSizeToProcess
   * @return useFileSizeToProcess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUseFileSizeToProcess() {
    return useFileSizeToProcess;
  }




   /**
   * Get useFileNameProcessed
   * @return useFileNameProcessed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUseFileNameProcessed() {
    return useFileNameProcessed;
  }




   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBandwidth() {
    return bandwidth;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TapeDrive tapeDrive = (TapeDrive) o;
    return Objects.equals(this.serial, tapeDrive.serial) &&
        Objects.equals(this.scsiAddress, tapeDrive.scsiAddress) &&
        Objects.equals(this.vendor, tapeDrive.vendor) &&
        Objects.equals(this.product, tapeDrive.product) &&
        Objects.equals(this.firmware, tapeDrive.firmware) &&
        Objects.equals(this.device, tapeDrive.device) &&
        Objects.equals(this.sgdevice, tapeDrive.sgdevice) &&
        Objects.equals(this.id, tapeDrive.id) &&
        Objects.equals(this.tapeLibraryId, tapeDrive.tapeLibraryId) &&
        Objects.equals(this.name, tapeDrive.name) &&
        Objects.equals(this.comment, tapeDrive.comment) &&
        Objects.equals(this.libso, tapeDrive.libso) &&
        Objects.equals(this.acs, tapeDrive.acs) &&
        Objects.equals(this.lsm, tapeDrive.lsm) &&
        Objects.equals(this.panel, tapeDrive.panel) &&
        Objects.equals(this.transport, tapeDrive.transport) &&
        Objects.equals(this.status, tapeDrive.status) &&
        Objects.equals(this.full, tapeDrive.full) &&
        Objects.equals(this.mountCount, tapeDrive.mountCount) &&
        Objects.equals(this.useTo, tapeDrive.useTo) &&
        Objects.equals(this.useBy, tapeDrive.useBy) &&
        Objects.equals(this.barcode, tapeDrive.barcode) &&
        Objects.equals(this.taskId, tapeDrive.taskId) &&
        Objects.equals(this.useFileProcessedSize, tapeDrive.useFileProcessedSize) &&
        Objects.equals(this.useFileSizeToProcess, tapeDrive.useFileSizeToProcess) &&
        Objects.equals(this.useFileNameProcessed, tapeDrive.useFileNameProcessed) &&
        Objects.equals(this.bandwidth, tapeDrive.bandwidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serial, scsiAddress, vendor, product, firmware, device, sgdevice, id, tapeLibraryId, name, comment, libso, acs, lsm, panel, transport, status, full, mountCount, useTo, useBy, barcode, taskId, useFileProcessedSize, useFileSizeToProcess, useFileNameProcessed, bandwidth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TapeDrive {\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    scsiAddress: ").append(toIndentedString(scsiAddress)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    firmware: ").append(toIndentedString(firmware)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    sgdevice: ").append(toIndentedString(sgdevice)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tapeLibraryId: ").append(toIndentedString(tapeLibraryId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    libso: ").append(toIndentedString(libso)).append("\n");
    sb.append("    acs: ").append(toIndentedString(acs)).append("\n");
    sb.append("    lsm: ").append(toIndentedString(lsm)).append("\n");
    sb.append("    panel: ").append(toIndentedString(panel)).append("\n");
    sb.append("    transport: ").append(toIndentedString(transport)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    full: ").append(toIndentedString(full)).append("\n");
    sb.append("    mountCount: ").append(toIndentedString(mountCount)).append("\n");
    sb.append("    useTo: ").append(toIndentedString(useTo)).append("\n");
    sb.append("    useBy: ").append(toIndentedString(useBy)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    useFileProcessedSize: ").append(toIndentedString(useFileProcessedSize)).append("\n");
    sb.append("    useFileSizeToProcess: ").append(toIndentedString(useFileSizeToProcess)).append("\n");
    sb.append("    useFileNameProcessed: ").append(toIndentedString(useFileNameProcessed)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

