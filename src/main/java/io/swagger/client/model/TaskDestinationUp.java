/*
 * Nodeum API
 * Nodeum API  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TaskDestinationUp
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-16T09:57:17.206Z")
public class TaskDestinationUp {
  @SerializedName("folder_id")
  private Integer folderId = null;

  @SerializedName("folder_path")
  private String folderPath = null;

  @SerializedName("tape_id")
  private Integer tapeId = null;

  @SerializedName("tape_barcode")
  private String tapeBarcode = null;

  @SerializedName("tape_pool_id")
  private Integer tapePoolId = null;

  @SerializedName("tape_pool_name")
  private String tapePoolName = null;

  @SerializedName("cloud_pool_id")
  private Integer cloudPoolId = null;

  @SerializedName("cloud_pool_name")
  private String cloudPoolName = null;

  @SerializedName("nas_pool_id")
  private Integer nasPoolId = null;

  @SerializedName("nas_pool_name")
  private String nasPoolName = null;

  public TaskDestinationUp folderId(Integer folderId) {
    this.folderId = folderId;
    return this;
  }

   /**
   * Get folderId
   * @return folderId
  **/
  @ApiModelProperty(value = "")
  public Integer getFolderId() {
    return folderId;
  }

  public void setFolderId(Integer folderId) {
    this.folderId = folderId;
  }

  public TaskDestinationUp folderPath(String folderPath) {
    this.folderPath = folderPath;
    return this;
  }

   /**
   * Get folderPath
   * @return folderPath
  **/
  @ApiModelProperty(value = "")
  public String getFolderPath() {
    return folderPath;
  }

  public void setFolderPath(String folderPath) {
    this.folderPath = folderPath;
  }

  public TaskDestinationUp tapeId(Integer tapeId) {
    this.tapeId = tapeId;
    return this;
  }

   /**
   * Get tapeId
   * @return tapeId
  **/
  @ApiModelProperty(value = "")
  public Integer getTapeId() {
    return tapeId;
  }

  public void setTapeId(Integer tapeId) {
    this.tapeId = tapeId;
  }

  public TaskDestinationUp tapeBarcode(String tapeBarcode) {
    this.tapeBarcode = tapeBarcode;
    return this;
  }

   /**
   * Get tapeBarcode
   * @return tapeBarcode
  **/
  @ApiModelProperty(value = "")
  public String getTapeBarcode() {
    return tapeBarcode;
  }

  public void setTapeBarcode(String tapeBarcode) {
    this.tapeBarcode = tapeBarcode;
  }

  public TaskDestinationUp tapePoolId(Integer tapePoolId) {
    this.tapePoolId = tapePoolId;
    return this;
  }

   /**
   * Get tapePoolId
   * @return tapePoolId
  **/
  @ApiModelProperty(value = "")
  public Integer getTapePoolId() {
    return tapePoolId;
  }

  public void setTapePoolId(Integer tapePoolId) {
    this.tapePoolId = tapePoolId;
  }

  public TaskDestinationUp tapePoolName(String tapePoolName) {
    this.tapePoolName = tapePoolName;
    return this;
  }

   /**
   * Get tapePoolName
   * @return tapePoolName
  **/
  @ApiModelProperty(value = "")
  public String getTapePoolName() {
    return tapePoolName;
  }

  public void setTapePoolName(String tapePoolName) {
    this.tapePoolName = tapePoolName;
  }

  public TaskDestinationUp cloudPoolId(Integer cloudPoolId) {
    this.cloudPoolId = cloudPoolId;
    return this;
  }

   /**
   * Get cloudPoolId
   * @return cloudPoolId
  **/
  @ApiModelProperty(value = "")
  public Integer getCloudPoolId() {
    return cloudPoolId;
  }

  public void setCloudPoolId(Integer cloudPoolId) {
    this.cloudPoolId = cloudPoolId;
  }

  public TaskDestinationUp cloudPoolName(String cloudPoolName) {
    this.cloudPoolName = cloudPoolName;
    return this;
  }

   /**
   * Get cloudPoolName
   * @return cloudPoolName
  **/
  @ApiModelProperty(value = "")
  public String getCloudPoolName() {
    return cloudPoolName;
  }

  public void setCloudPoolName(String cloudPoolName) {
    this.cloudPoolName = cloudPoolName;
  }

  public TaskDestinationUp nasPoolId(Integer nasPoolId) {
    this.nasPoolId = nasPoolId;
    return this;
  }

   /**
   * Get nasPoolId
   * @return nasPoolId
  **/
  @ApiModelProperty(value = "")
  public Integer getNasPoolId() {
    return nasPoolId;
  }

  public void setNasPoolId(Integer nasPoolId) {
    this.nasPoolId = nasPoolId;
  }

  public TaskDestinationUp nasPoolName(String nasPoolName) {
    this.nasPoolName = nasPoolName;
    return this;
  }

   /**
   * Get nasPoolName
   * @return nasPoolName
  **/
  @ApiModelProperty(value = "")
  public String getNasPoolName() {
    return nasPoolName;
  }

  public void setNasPoolName(String nasPoolName) {
    this.nasPoolName = nasPoolName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskDestinationUp taskDestinationUp = (TaskDestinationUp) o;
    return Objects.equals(this.folderId, taskDestinationUp.folderId) &&
        Objects.equals(this.folderPath, taskDestinationUp.folderPath) &&
        Objects.equals(this.tapeId, taskDestinationUp.tapeId) &&
        Objects.equals(this.tapeBarcode, taskDestinationUp.tapeBarcode) &&
        Objects.equals(this.tapePoolId, taskDestinationUp.tapePoolId) &&
        Objects.equals(this.tapePoolName, taskDestinationUp.tapePoolName) &&
        Objects.equals(this.cloudPoolId, taskDestinationUp.cloudPoolId) &&
        Objects.equals(this.cloudPoolName, taskDestinationUp.cloudPoolName) &&
        Objects.equals(this.nasPoolId, taskDestinationUp.nasPoolId) &&
        Objects.equals(this.nasPoolName, taskDestinationUp.nasPoolName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(folderId, folderPath, tapeId, tapeBarcode, tapePoolId, tapePoolName, cloudPoolId, cloudPoolName, nasPoolId, nasPoolName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskDestinationUp {\n");
    
    sb.append("    folderId: ").append(toIndentedString(folderId)).append("\n");
    sb.append("    folderPath: ").append(toIndentedString(folderPath)).append("\n");
    sb.append("    tapeId: ").append(toIndentedString(tapeId)).append("\n");
    sb.append("    tapeBarcode: ").append(toIndentedString(tapeBarcode)).append("\n");
    sb.append("    tapePoolId: ").append(toIndentedString(tapePoolId)).append("\n");
    sb.append("    tapePoolName: ").append(toIndentedString(tapePoolName)).append("\n");
    sb.append("    cloudPoolId: ").append(toIndentedString(cloudPoolId)).append("\n");
    sb.append("    cloudPoolName: ").append(toIndentedString(cloudPoolName)).append("\n");
    sb.append("    nasPoolId: ").append(toIndentedString(nasPoolId)).append("\n");
    sb.append("    nasPoolName: ").append(toIndentedString(nasPoolName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

