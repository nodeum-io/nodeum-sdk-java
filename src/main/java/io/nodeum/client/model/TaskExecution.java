/*
 * Nodeum API Reference
 * The Nodeum API makes it easy to tap into the digital data mesh that runs across your organisation. Make requests to our API endpoints and we’ll give you everything you need to interconnect your business workflows with your storage.  All production API requests are made to:  http://nodeumhostname/api/  The current production version of the API is v1.   **REST** The Nodeum API is a RESTful API. This means that the API is designed to allow you to get, create, update, & delete objects with the HTTP verbs GET, POST, PUT, PATCH, & DELETE.  **JSON** The Nodeum API speaks exclusively in JSON. This means that you should always set the Content-Type header to application/json to ensure that your requests are properly accepted and processed by the API.  **Authentication** All API calls require user-password authentication.   **Cross-Origin Resource Sharing** The Nodeum API supports CORS for communicating from Javascript for these endpoints. You will need to specify an Origin URI when creating your application to allow for CORS to be whitelisted for your domain.   **Pagination** Some endpoints such as File Listing return a potentially lengthy array of objects. In order to keep the response sizes manageable the API will take advantage of pagination. Pagination is a mechanism for returning a subset of the results for a request and allowing for subsequent requests to “page” through the rest of the results until the end is reached. Paginated endpoints follow a standard interface that accepts two query parameters, limit and offset, and return a payload that follows a standard form. These parameters names and their behavior are borrowed from SQL LIMIT and OFFSET keywords.  **Versioning** The Nodeum API is constantly being worked on to add features, make improvements, and fix bugs. This means that you should expect changes to be introduced and documented.   However, there are some changes or additions that are considered backwards-compatible and your applications should be flexible enough to handle them. These include:  - Adding new endpoints to the API - Adding new attributes to the response of an existing endpoint - Changing the order of attributes of responses (JSON by definition is an object of unordered key/value pairs)   **Filter parameters** When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nodeum.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TaskExecution
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-11T14:24:52.440Z[GMT]")
public class TaskExecution {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TASK_ID = "task_id";
  @SerializedName(SERIALIZED_NAME_TASK_ID)
  private Integer taskId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    EXPORT_ACTIVE_ARCHIVE_COPY("export_active_archive_copy"),
    
    IMPORT_ACTIVE_ARCHIVE_COPY("import_active_archive_copy"),
    
    EXT_TO_CACHE("ext_to_cache"),
    
    CACHE_TO_PRIMARY("cache_to_primary"),
    
    TO_CLOUD_ACTIVE_ARCHIVE_COPY("to_cloud_active_archive_copy"),
    
    FROM_CLOUD_ACTIVE_ARCHIVE_COPY("from_cloud_active_archive_copy"),
    
    TO_NAS_ACTIVE_ARCHIVE_COPY("to_nas_active_archive_copy"),
    
    FROM_NAS_ACTIVE_ARCHIVE_COPY("from_nas_active_archive_copy"),
    
    EXPORT_ACTIVE_ARCHIVE_MOVE("export_active_archive_move"),
    
    FROM_CLOUD_ACTIVE_ARCHIVE_MOVE("from_cloud_active_archive_move"),
    
    FROM_NAS_ACTIVE_ARCHIVE_MOVE("from_nas_active_archive_move"),
    
    TO_CLOUD_ACTIVE_ARCHIVE_MOVE("to_cloud_active_archive_move"),
    
    FROM_CLOUD_TO_CLOUD_ACTIVE_ARCHIVE_MOVE("from_cloud_to_cloud_active_archive_move"),
    
    FROM_CLOUD_TO_NAS_ACTIVE_ARCHIVE_MOVE("from_cloud_to_nas_active_archive_move"),
    
    TO_NAS_ACTIVE_ARCHIVE_MOVE("to_nas_active_archive_move"),
    
    FROM_NAS_TO_NAS_ACTIVE_ARCHIVE_MOVE("from_nas_to_nas_active_archive_move"),
    
    FROM_NAS_TO_CLOUD_ACTIVE_ARCHIVE_MOVE("from_nas_to_cloud_active_archive_move"),
    
    EXT_TO_CACHE_MOVE("ext_to_cache_move"),
    
    EXPORT_OFFLINE_ARCHIVING_COPY("export_offline_archiving_copy"),
    
    IMPORT_OFFLINE_ARCHIVING_COPY("import_offline_archiving_copy"),
    
    TO_CLOUD_OFFLINE_COPY("to_cloud_offline_copy"),
    
    FROM_CLOUD_OFFLINE_COPY("from_cloud_offline_copy"),
    
    TO_NAS_OFFLINE_COPY("to_nas_offline_copy"),
    
    FROM_NAS_OFFLINE_COPY("from_nas_offline_copy"),
    
    FROM_CLOUD_TO_CLOUD_OFFLINE_ARCHIVE_COPY("from_cloud_to_cloud_offline_archive_copy"),
    
    FROM_NAS_TO_NAS_OFFLINE_ARCHIVE_COPY("from_nas_to_nas_offline_archive_copy"),
    
    RELOAD_COPY("reload_copy"),
    
    EXPORT_OFFLINE_ARCHIVING_MOVE("export_offline_archiving_move"),
    
    TO_CLOUD_OFFLINE_MOVE("to_cloud_offline_move"),
    
    TO_NAS_OFFLINE_MOVE("to_nas_offline_move"),
    
    OFFLINE_SCAN_MEDIA("offline_scan_media"),
    
    FROM_NAS_TO_NAS_OFFLINE_ARCHIVE_MOVE("from_nas_to_nas_offline_archive_move"),
    
    FROM_NAS_OFFLINE_ARCHIVE_MOVE("from_nas_offline_archive_move"),
    
    FROM_CLOUD_TO_CLOUD_OFFLINE_ARCHIVE_MOVE("from_cloud_to_cloud_offline_archive_move"),
    
    FROM_CLOUD_OFFLINE_ARCHIVE_MOVE("from_cloud_offline_archive_move"),
    
    RELOAD_MOVE("reload_move"),
    
    EXPORT_DATA_EXCHANGE_COPY("export_data_exchange_copy"),
    
    IMPORT_DATA_EXCHANGE_COPY("import_data_exchange_copy"),
    
    EXPORT_DATA_EXCHANGE_MOVE("export_data_exchange_move"),
    
    IMPORT_SCAN_MEDIA("import_scan_media"),
    
    REHYDRATATION("rehydratation"),
    
    FORMAT("format"),
    
    CHECK_CONSISTENCY("check_consistency"),
    
    MIGRATION_NEW_LTFS_TO_NEW_LTFS("migration_new_ltfs_to_new_ltfs"),
    
    FULL_BACKUP("full_backup"),
    
    INCREMENTAL_BACKUP("incremental_backup"),
    
    DATA_ENRICHMENT_GOOGLE_VISION("data_enrichment_google_vision"),
    
    DATA_ENRICHMENT_DEPTHEN("data_enrichment_depthen");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NOT_ACTIVATED("not_activated"),
    
    DONE("done"),
    
    IN_PROGRESS("in_progress"),
    
    ERROR("error"),
    
    PAUSED("paused"),
    
    STOPPED_BY_SYSTEM("stopped_by_system"),
    
    IN_QUEUE("in_queue"),
    
    FINISHED_WITH_WARNINGS("finished_with_warnings"),
    
    CALCULATING("calculating"),
    
    STOPPED_BY_USER("stopped_by_user");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_LOG_TIME = "log_time";
  @SerializedName(SERIALIZED_NAME_LOG_TIME)
  private String logTime;

  public static final String SERIALIZED_NAME_JOB_STARTED = "job_started";
  @SerializedName(SERIALIZED_NAME_JOB_STARTED)
  private String jobStarted;

  public static final String SERIALIZED_NAME_JOB_FINISHED = "job_finished";
  @SerializedName(SERIALIZED_NAME_JOB_FINISHED)
  private String jobFinished;

  public static final String SERIALIZED_NAME_TO_PROCESS_SIZE = "to_process_size";
  @SerializedName(SERIALIZED_NAME_TO_PROCESS_SIZE)
  private Integer toProcessSize;

  public static final String SERIALIZED_NAME_PROCESSED_SIZE = "processed_size";
  @SerializedName(SERIALIZED_NAME_PROCESSED_SIZE)
  private Integer processedSize;

  public static final String SERIALIZED_NAME_TO_PROCESS_FILES = "to_process_files";
  @SerializedName(SERIALIZED_NAME_TO_PROCESS_FILES)
  private Integer toProcessFiles;

  public static final String SERIALIZED_NAME_PROCESSED_FILES = "processed_files";
  @SerializedName(SERIALIZED_NAME_PROCESSED_FILES)
  private Integer processedFiles;

  public static final String SERIALIZED_NAME_FINALIZED_FILES = "finalized_files";
  @SerializedName(SERIALIZED_NAME_FINALIZED_FILES)
  private Integer finalizedFiles;

  public static final String SERIALIZED_NAME_ESTIMATION_TIME = "estimation_time";
  @SerializedName(SERIALIZED_NAME_ESTIMATION_TIME)
  private Integer estimationTime;

  public static final String SERIALIZED_NAME_BANDWIDTH = "bandwidth";
  @SerializedName(SERIALIZED_NAME_BANDWIDTH)
  private Integer bandwidth;


  public TaskExecution id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1542797273225418555", value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public TaskExecution taskId(Integer taskId) {
    
    this.taskId = taskId;
    return this;
  }

   /**
   * Get taskId
   * @return taskId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTaskId() {
    return taskId;
  }


  public void setTaskId(Integer taskId) {
    this.taskId = taskId;
  }


  public TaskExecution name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TaskExecution type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public TaskExecution status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "finished_with_warnings", value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public TaskExecution logTime(String logTime) {
    
    this.logTime = logTime;
    return this;
  }

   /**
   * Get logTime
   * @return logTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-11-21T09:48:09.000Z", value = "")

  public String getLogTime() {
    return logTime;
  }


  public void setLogTime(String logTime) {
    this.logTime = logTime;
  }


  public TaskExecution jobStarted(String jobStarted) {
    
    this.jobStarted = jobStarted;
    return this;
  }

   /**
   * Get jobStarted
   * @return jobStarted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-11-21T10:47:53.000Z", value = "")

  public String getJobStarted() {
    return jobStarted;
  }


  public void setJobStarted(String jobStarted) {
    this.jobStarted = jobStarted;
  }


  public TaskExecution jobFinished(String jobFinished) {
    
    this.jobFinished = jobFinished;
    return this;
  }

   /**
   * Get jobFinished
   * @return jobFinished
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-11-21T10:48:08.000Z", value = "")

  public String getJobFinished() {
    return jobFinished;
  }


  public void setJobFinished(String jobFinished) {
    this.jobFinished = jobFinished;
  }


  public TaskExecution toProcessSize(Integer toProcessSize) {
    
    this.toProcessSize = toProcessSize;
    return this;
  }

   /**
   * Get toProcessSize
   * @return toProcessSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "16515610", value = "")

  public Integer getToProcessSize() {
    return toProcessSize;
  }


  public void setToProcessSize(Integer toProcessSize) {
    this.toProcessSize = toProcessSize;
  }


  public TaskExecution processedSize(Integer processedSize) {
    
    this.processedSize = processedSize;
    return this;
  }

   /**
   * Get processedSize
   * @return processedSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12115125", value = "")

  public Integer getProcessedSize() {
    return processedSize;
  }


  public void setProcessedSize(Integer processedSize) {
    this.processedSize = processedSize;
  }


  public TaskExecution toProcessFiles(Integer toProcessFiles) {
    
    this.toProcessFiles = toProcessFiles;
    return this;
  }

   /**
   * Get toProcessFiles
   * @return toProcessFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "126", value = "")

  public Integer getToProcessFiles() {
    return toProcessFiles;
  }


  public void setToProcessFiles(Integer toProcessFiles) {
    this.toProcessFiles = toProcessFiles;
  }


  public TaskExecution processedFiles(Integer processedFiles) {
    
    this.processedFiles = processedFiles;
    return this;
  }

   /**
   * Get processedFiles
   * @return processedFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "113", value = "")

  public Integer getProcessedFiles() {
    return processedFiles;
  }


  public void setProcessedFiles(Integer processedFiles) {
    this.processedFiles = processedFiles;
  }


  public TaskExecution finalizedFiles(Integer finalizedFiles) {
    
    this.finalizedFiles = finalizedFiles;
    return this;
  }

   /**
   * Get finalizedFiles
   * @return finalizedFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "126", value = "")

  public Integer getFinalizedFiles() {
    return finalizedFiles;
  }


  public void setFinalizedFiles(Integer finalizedFiles) {
    this.finalizedFiles = finalizedFiles;
  }


  public TaskExecution estimationTime(Integer estimationTime) {
    
    this.estimationTime = estimationTime;
    return this;
  }

   /**
   * Get estimationTime
   * @return estimationTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEstimationTime() {
    return estimationTime;
  }


  public void setEstimationTime(Integer estimationTime) {
    this.estimationTime = estimationTime;
  }


  public TaskExecution bandwidth(Integer bandwidth) {
    
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBandwidth() {
    return bandwidth;
  }


  public void setBandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskExecution taskExecution = (TaskExecution) o;
    return Objects.equals(this.id, taskExecution.id) &&
        Objects.equals(this.taskId, taskExecution.taskId) &&
        Objects.equals(this.name, taskExecution.name) &&
        Objects.equals(this.type, taskExecution.type) &&
        Objects.equals(this.status, taskExecution.status) &&
        Objects.equals(this.logTime, taskExecution.logTime) &&
        Objects.equals(this.jobStarted, taskExecution.jobStarted) &&
        Objects.equals(this.jobFinished, taskExecution.jobFinished) &&
        Objects.equals(this.toProcessSize, taskExecution.toProcessSize) &&
        Objects.equals(this.processedSize, taskExecution.processedSize) &&
        Objects.equals(this.toProcessFiles, taskExecution.toProcessFiles) &&
        Objects.equals(this.processedFiles, taskExecution.processedFiles) &&
        Objects.equals(this.finalizedFiles, taskExecution.finalizedFiles) &&
        Objects.equals(this.estimationTime, taskExecution.estimationTime) &&
        Objects.equals(this.bandwidth, taskExecution.bandwidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, taskId, name, type, status, logTime, jobStarted, jobFinished, toProcessSize, processedSize, toProcessFiles, processedFiles, finalizedFiles, estimationTime, bandwidth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskExecution {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    logTime: ").append(toIndentedString(logTime)).append("\n");
    sb.append("    jobStarted: ").append(toIndentedString(jobStarted)).append("\n");
    sb.append("    jobFinished: ").append(toIndentedString(jobFinished)).append("\n");
    sb.append("    toProcessSize: ").append(toIndentedString(toProcessSize)).append("\n");
    sb.append("    processedSize: ").append(toIndentedString(processedSize)).append("\n");
    sb.append("    toProcessFiles: ").append(toIndentedString(toProcessFiles)).append("\n");
    sb.append("    processedFiles: ").append(toIndentedString(processedFiles)).append("\n");
    sb.append("    finalizedFiles: ").append(toIndentedString(finalizedFiles)).append("\n");
    sb.append("    estimationTime: ").append(toIndentedString(estimationTime)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

