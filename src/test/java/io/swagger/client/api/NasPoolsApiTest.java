/*
 * Nodeum API
 * Nodeum API  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Error;
import io.swagger.client.model.NasPool;
import io.swagger.client.model.NasPoolCollection;
import io.swagger.client.model.NasPoolUp;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NasPoolsApi
 */
@Ignore
public class NasPoolsApiTest {

    private final NasPoolsApi api = new NasPoolsApi();

    
    /**
     * Creates a new NAS pool.
     *
     * **API Key Scope**: nas_pools / create
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNasPoolTest() throws ApiException {
        NasPoolUp nasPoolBody = null;
        NasPool response = api.createNasPool(nasPoolBody);

        // TODO: test validations
    }
    
    /**
     * Destroys a specific NAS pool.
     *
     * **API Key Scope**: nas_pools / destroy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void destroyNasPoolTest() throws ApiException {
        String nasPoolId = null;
        api.destroyNasPool(nasPoolId);

        // TODO: test validations
    }
    
    /**
     * Lists all NAS pools.
     *
     * **API Key Scope**: nas_pools / index
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void indexNasPoolsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        List<String> sortBy = null;
        String id = null;
        String name = null;
        String comment = null;
        String type = null;
        NasPoolCollection response = api.indexNasPools(limit, offset, sortBy, id, name, comment, type);

        // TODO: test validations
    }
    
    /**
     * Displays a specific NAS pool.
     *
     * **API Key Scope**: nas_pools / show
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void showNasPoolTest() throws ApiException {
        String nasPoolId = null;
        NasPool response = api.showNasPool(nasPoolId);

        // TODO: test validations
    }
    
    /**
     * Updates a specific NAS pool.
     *
     * **API Key Scope**: nas_pools / update
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNasPoolTest() throws ApiException {
        String nasPoolId = null;
        NasPoolUp nasPoolBody = null;
        NasPool response = api.updateNasPool(nasPoolId, nasPoolBody);

        // TODO: test validations
    }
    
}
