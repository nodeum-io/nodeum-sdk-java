/*
 * Nodeum API
 * # About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nodeum.client.api;

import io.nodeum.client.ApiException;
import io.nodeum.client.model.Error;
import io.nodeum.client.model.TaskMetadatum;
import io.nodeum.client.model.TaskMetadatumCollection;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskMetadataApi
 */
@Ignore
public class TaskMetadataApiTest {

    private final TaskMetadataApi api = new TaskMetadataApi();

    
    /**
     * Creates a new task metadatum.
     *
     * **API Key Scope**: task_metadata / create
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTaskMetadatumTest() throws ApiException {
        String taskId = null;
        TaskMetadatum taskMetadatumBody = null;
        TaskMetadatum response = api.createTaskMetadatum(taskId, taskMetadatumBody);

        // TODO: test validations
    }
    
    /**
     * Destroys a specific task metadatum.
     *
     * **API Key Scope**: task_metadata / destroy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void destroyTaskMetadatumTest() throws ApiException {
        String taskId = null;
        Integer taskMetadatumId = null;
        api.destroyTaskMetadatum(taskId, taskMetadatumId);

        // TODO: test validations
    }
    
    /**
     * Lists all task metadata.
     *
     * **API Key Scope**: task_metadata / index
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void indexTaskMetadataTest() throws ApiException {
        String taskId = null;
        Integer limit = null;
        Integer offset = null;
        List<String> sortBy = null;
        String id = null;
        String key = null;
        String value = null;
        TaskMetadatumCollection response = api.indexTaskMetadata(taskId, limit, offset, sortBy, id, key, value);

        // TODO: test validations
    }
    
    /**
     * Displays a specific task metadatum.
     *
     * **API Key Scope**: task_metadata / show
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void showTaskMetadatumTest() throws ApiException {
        String taskId = null;
        Integer taskMetadatumId = null;
        TaskMetadatum response = api.showTaskMetadatum(taskId, taskMetadatumId);

        // TODO: test validations
    }
    
    /**
     * Updates a specific task metadatum.
     *
     * **API Key Scope**: task_metadata / update
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTaskMetadatumTest() throws ApiException {
        String taskId = null;
        Integer taskMetadatumId = null;
        TaskMetadatum taskMetadatumBody = null;
        TaskMetadatum response = api.updateTaskMetadatum(taskId, taskMetadatumId, taskMetadatumBody);

        // TODO: test validations
    }
    
}
