/*
 * Nodeum API
 * Nodeum API  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ActiveJobStatus;
import io.swagger.client.model.Error;
import io.swagger.client.model.TapeLibrary;
import io.swagger.client.model.TapeLibraryCollection;
import io.swagger.client.model.TapeLibraryDeviceCollection;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TapeLibrariesApi
 */
@Ignore
public class TapeLibrariesApiTest {

    private final TapeLibrariesApi api = new TapeLibrariesApi();

    
    /**
     * Creates a new tape library.
     *
     * **API Key Scope**: tape_libraries / create
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTapeLibraryTest() throws ApiException {
        TapeLibrary tapeLibraryBody = null;
        TapeLibrary response = api.createTapeLibrary(tapeLibraryBody);

        // TODO: test validations
    }
    
    /**
     * Destroys a specific tape library.
     *
     * **API Key Scope**: tape_libraries / destroy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void destroyTapeLibraryTest() throws ApiException {
        String tapeLibraryId = null;
        api.destroyTapeLibrary(tapeLibraryId);

        // TODO: test validations
    }
    
    /**
     * Lists all tape libraries.
     *
     * **API Key Scope**: tape_libraries / index
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void indexTapeLibrariesTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        List<String> sortBy = null;
        String id = null;
        String name = null;
        String serial = null;
        String comment = null;
        String protocol = null;
        String vendor = null;
        String product = null;
        String firmware = null;
        String device = null;
        String libso = null;
        String acs = null;
        String status = null;
        String storageSlots = null;
        String storageSlotsAddress = null;
        String ioSlots = null;
        String ioSlotsAddress = null;
        String price = null;
        TapeLibraryCollection response = api.indexTapeLibraries(limit, offset, sortBy, id, name, serial, comment, protocol, vendor, product, firmware, device, libso, acs, status, storageSlots, storageSlotsAddress, ioSlots, ioSlotsAddress, price);

        // TODO: test validations
    }
    
    /**
     * Lists tape libraries devices.
     *
     * **API Key Scope**: tape_libraries / devices
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void indexTapeLibraryDevicesTest() throws ApiException {
        String jobId = null;
        TapeLibraryDeviceCollection response = api.indexTapeLibraryDevices(jobId);

        // TODO: test validations
    }
    
    /**
     * Displays a specific tape library.
     *
     * **API Key Scope**: tape_libraries / show
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void showTapeLibraryTest() throws ApiException {
        String tapeLibraryId = null;
        TapeLibrary response = api.showTapeLibrary(tapeLibraryId);

        // TODO: test validations
    }
    
    /**
     * Updates a specific tape library.
     *
     * **API Key Scope**: tape_libraries / update
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTapeLibraryTest() throws ApiException {
        String tapeLibraryId = null;
        TapeLibrary tapeLibraryBody = null;
        TapeLibrary response = api.updateTapeLibrary(tapeLibraryId, tapeLibraryBody);

        // TODO: test validations
    }
    
}
