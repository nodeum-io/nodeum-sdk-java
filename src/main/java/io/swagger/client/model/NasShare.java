/*
 * Nodeum API
 * Nodeum API  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NasShare
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-16T09:57:17.206Z")
public class NasShare {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("nas_id")
  private Integer nasId = null;

  @SerializedName("nas_pool_id")
  private Integer nasPoolId = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("options")
  private String options = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("password")
  private String password = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "10", value = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get nasId
   * @return nasId
  **/
  @ApiModelProperty(example = "2", value = "")
  public Integer getNasId() {
    return nasId;
  }

   /**
   * Get nasPoolId
   * @return nasPoolId
  **/
  @ApiModelProperty(example = "6", value = "")
  public Integer getNasPoolId() {
    return nasPoolId;
  }

  public NasShare path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @ApiModelProperty(example = "archives/general", value = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public NasShare options(String options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @ApiModelProperty(example = "rsize=1048576,wsize=1048576", value = "")
  public String getOptions() {
    return options;
  }

  public void setOptions(String options) {
    this.options = options;
  }

  public NasShare username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @ApiModelProperty(example = "admin", value = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public NasShare password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @ApiModelProperty(example = "[censored]", value = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NasShare nasShare = (NasShare) o;
    return Objects.equals(this.id, nasShare.id) &&
        Objects.equals(this.nasId, nasShare.nasId) &&
        Objects.equals(this.nasPoolId, nasShare.nasPoolId) &&
        Objects.equals(this.path, nasShare.path) &&
        Objects.equals(this.options, nasShare.options) &&
        Objects.equals(this.username, nasShare.username) &&
        Objects.equals(this.password, nasShare.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, nasId, nasPoolId, path, options, username, password);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NasShare {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    nasId: ").append(toIndentedString(nasId)).append("\n");
    sb.append("    nasPoolId: ").append(toIndentedString(nasPoolId)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

