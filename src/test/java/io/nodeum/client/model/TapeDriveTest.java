/*
 * Nodeum API
 * # About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nodeum.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nodeum.client.model.TapeDriveAllOf;
import io.nodeum.client.model.TapeDriveDevice;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TapeDrive
 */
public class TapeDriveTest {
    private final TapeDrive model = new TapeDrive();

    /**
     * Model tests for TapeDrive
     */
    @Test
    public void testTapeDrive() {
        // TODO: test TapeDrive
    }

    /**
     * Test the property 'serial'
     */
    @Test
    public void serialTest() {
        // TODO: test serial
    }

    /**
     * Test the property 'scsiAddress'
     */
    @Test
    public void scsiAddressTest() {
        // TODO: test scsiAddress
    }

    /**
     * Test the property 'vendor'
     */
    @Test
    public void vendorTest() {
        // TODO: test vendor
    }

    /**
     * Test the property 'product'
     */
    @Test
    public void productTest() {
        // TODO: test product
    }

    /**
     * Test the property 'firmware'
     */
    @Test
    public void firmwareTest() {
        // TODO: test firmware
    }

    /**
     * Test the property 'device'
     */
    @Test
    public void deviceTest() {
        // TODO: test device
    }

    /**
     * Test the property 'sgdevice'
     */
    @Test
    public void sgdeviceTest() {
        // TODO: test sgdevice
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'tapeLibraryId'
     */
    @Test
    public void tapeLibraryIdTest() {
        // TODO: test tapeLibraryId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'libso'
     */
    @Test
    public void libsoTest() {
        // TODO: test libso
    }

    /**
     * Test the property 'acs'
     */
    @Test
    public void acsTest() {
        // TODO: test acs
    }

    /**
     * Test the property 'lsm'
     */
    @Test
    public void lsmTest() {
        // TODO: test lsm
    }

    /**
     * Test the property 'panel'
     */
    @Test
    public void panelTest() {
        // TODO: test panel
    }

    /**
     * Test the property 'transport'
     */
    @Test
    public void transportTest() {
        // TODO: test transport
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'full'
     */
    @Test
    public void fullTest() {
        // TODO: test full
    }

    /**
     * Test the property 'mountCount'
     */
    @Test
    public void mountCountTest() {
        // TODO: test mountCount
    }

    /**
     * Test the property 'useTo'
     */
    @Test
    public void useToTest() {
        // TODO: test useTo
    }

    /**
     * Test the property 'useBy'
     */
    @Test
    public void useByTest() {
        // TODO: test useBy
    }

    /**
     * Test the property 'barcode'
     */
    @Test
    public void barcodeTest() {
        // TODO: test barcode
    }

    /**
     * Test the property 'taskId'
     */
    @Test
    public void taskIdTest() {
        // TODO: test taskId
    }

    /**
     * Test the property 'useFileProcessedSize'
     */
    @Test
    public void useFileProcessedSizeTest() {
        // TODO: test useFileProcessedSize
    }

    /**
     * Test the property 'useFileSizeToProcess'
     */
    @Test
    public void useFileSizeToProcessTest() {
        // TODO: test useFileSizeToProcess
    }

    /**
     * Test the property 'useFileNameProcessed'
     */
    @Test
    public void useFileNameProcessedTest() {
        // TODO: test useFileNameProcessed
    }

    /**
     * Test the property 'bandwidth'
     */
    @Test
    public void bandwidthTest() {
        // TODO: test bandwidth
    }

}
