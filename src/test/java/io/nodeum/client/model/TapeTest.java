/*
 * Nodeum API
 * # About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nodeum.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Tape
 */
public class TapeTest {
    private final Tape model = new Tape();

    /**
     * Model tests for Tape
     */
    @Test
    public void testTape() {
        // TODO: test Tape
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'tapeLibraryId'
     */
    @Test
    public void tapeLibraryIdTest() {
        // TODO: test tapeLibraryId
    }

    /**
     * Test the property 'poolId'
     */
    @Test
    public void poolIdTest() {
        // TODO: test poolId
    }

    /**
     * Test the property 'barcode'
     */
    @Test
    public void barcodeTest() {
        // TODO: test barcode
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'locked'
     */
    @Test
    public void lockedTest() {
        // TODO: test locked
    }

    /**
     * Test the property 'scratch'
     */
    @Test
    public void scratchTest() {
        // TODO: test scratch
    }

    /**
     * Test the property 'cleaning'
     */
    @Test
    public void cleaningTest() {
        // TODO: test cleaning
    }

    /**
     * Test the property 'writeProtect'
     */
    @Test
    public void writeProtectTest() {
        // TODO: test writeProtect
    }

    /**
     * Test the property 'mounted'
     */
    @Test
    public void mountedTest() {
        // TODO: test mounted
    }

    /**
     * Test the property 'ejected'
     */
    @Test
    public void ejectedTest() {
        // TODO: test ejected
    }

    /**
     * Test the property 'known'
     */
    @Test
    public void knownTest() {
        // TODO: test known
    }

    /**
     * Test the property 'mountCount'
     */
    @Test
    public void mountCountTest() {
        // TODO: test mountCount
    }

    /**
     * Test the property 'dateIn'
     */
    @Test
    public void dateInTest() {
        // TODO: test dateIn
    }

    /**
     * Test the property 'dateMove'
     */
    @Test
    public void dateMoveTest() {
        // TODO: test dateMove
    }

    /**
     * Test the property 'free'
     */
    @Test
    public void freeTest() {
        // TODO: test free
    }

    /**
     * Test the property 'max'
     */
    @Test
    public void maxTest() {
        // TODO: test max
    }

    /**
     * Test the property 'lastSizeUpdate'
     */
    @Test
    public void lastSizeUpdateTest() {
        // TODO: test lastSizeUpdate
    }

    /**
     * Test the property 'lastMaintenance'
     */
    @Test
    public void lastMaintenanceTest() {
        // TODO: test lastMaintenance
    }

    /**
     * Test the property 'lastRepack'
     */
    @Test
    public void lastRepackTest() {
        // TODO: test lastRepack
    }

    /**
     * Test the property 'repackStatus'
     */
    @Test
    public void repackStatusTest() {
        // TODO: test repackStatus
    }

    /**
     * Test the property 'hash'
     */
    @Test
    public void hashTest() {
        // TODO: test hash
    }

    /**
     * Test the property 'forceImportType'
     */
    @Test
    public void forceImportTypeTest() {
        // TODO: test forceImportType
    }

    /**
     * Test the property 'needToCheck'
     */
    @Test
    public void needToCheckTest() {
        // TODO: test needToCheck
    }

}
