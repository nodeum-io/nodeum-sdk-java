/*
 * Nodeum API
 * Nodeum API  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)  
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Error;
import io.swagger.client.model.TaskDestinationCollection;
import io.swagger.client.model.TaskDestinationDown;
import io.swagger.client.model.TaskDestinationUp;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskDestinationsApi
 */
@Ignore
public class TaskDestinationsApiTest {

    private final TaskDestinationsApi api = new TaskDestinationsApi();

    
    /**
     * Creates a new task destination.
     *
     * **API Key Scope**: task_destinations / create
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTaskDestinationTest() throws ApiException {
        String taskId = null;
        TaskDestinationUp taskDestinationBody = null;
        TaskDestinationDown response = api.createTaskDestination(taskId, taskDestinationBody);

        // TODO: test validations
    }
    
    /**
     * Destroys a specific task destination.
     *
     * **API Key Scope**: task_destinations / destroy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void destroyTaskDestinationTest() throws ApiException {
        String taskId = null;
        Integer taskDestinationId = null;
        api.destroyTaskDestination(taskId, taskDestinationId);

        // TODO: test validations
    }
    
    /**
     * Lists all task destinations.
     *
     * Filter and pagination parameters are not available for this API.  **API Key Scope**: task_destinations / index
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void indexTaskDestinationsTest() throws ApiException {
        String taskId = null;
        TaskDestinationCollection response = api.indexTaskDestinations(taskId);

        // TODO: test validations
    }
    
    /**
     * Displays a specific task destination.
     *
     * **API Key Scope**: task_destinations / show
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void showTaskDestinationTest() throws ApiException {
        String taskId = null;
        Integer taskDestinationId = null;
        TaskDestinationDown response = api.showTaskDestination(taskId, taskDestinationId);

        // TODO: test validations
    }
    
    /**
     * Updates a specific task destination.
     *
     * **API Key Scope**: task_destinations / update
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTaskDestinationTest() throws ApiException {
        String taskId = null;
        Integer taskDestinationId = null;
        TaskDestinationUp taskDestinationBody = null;
        TaskDestinationDown response = api.updateTaskDestination(taskId, taskDestinationId, taskDestinationBody);

        // TODO: test validations
    }
    
}
